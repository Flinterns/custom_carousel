{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\lenovo\\\\Downloads\\\\react-spring-3d-carousel-basic-example\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\lenovo\\\\Downloads\\\\react-spring-3d-carousel-basic-example\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Downloads\\\\react-spring-3d-carousel-basic-example\\\\src\\\\Slide.js\";\n\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Spring, animated } from \"react-spring/renderprops\";\nimport { withGesture } from \"react-with-gesture\";\nvar SlideContainer = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  height: 70%;\\n  top: 50%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transform-origin: 50% 50%;\\n\"])));\nvar SlideCard = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  position: relative;\\n  max-width: 50%;\\n  min-width: 30%;\\n  width: 100vw;\\n  height: 100%;\\n  background: white;\\n  font-size: 35px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transform-origin: 50% 50%;\\n\"])));\n\nfunction Slide(_ref) {\n  var _this = this;\n\n  var content = _ref.content,\n      offsetRadius = _ref.offsetRadius,\n      index = _ref.index,\n      animationConfig = _ref.animationConfig,\n      moveSlide = _ref.moveSlide,\n      delta = _ref.delta,\n      down = _ref.down,\n      up = _ref.up;\n  var offsetFromMiddle = index - offsetRadius;\n  var totalPresentables = 2 * offsetRadius + 1;\n  var distanceFactor = 1 - Math.abs(offsetFromMiddle / (offsetRadius + 1));\n\n  var offsetCardClick = function offsetCardClick(i) {\n    console.log(i);\n  };\n\n  var translateYoffset = 50 * (Math.abs(offsetFromMiddle) / (offsetRadius + 1));\n  var translateY = -50;\n\n  if (offsetRadius !== 0) {\n    if (index === 0) {\n      translateY = 0;\n    } else if (index === totalPresentables - 1) {\n      translateY = -100;\n    }\n  }\n\n  if (offsetFromMiddle === 0 && down) {\n    translateY += delta[1] / (offsetRadius + 1);\n\n    if (translateY > -40) {\n      moveSlide(-1);\n    }\n\n    if (translateY < -100) {\n      moveSlide(1);\n    }\n  }\n\n  if (offsetFromMiddle > 0) {\n    translateY += translateYoffset;\n  } else if (offsetFromMiddle < 0) {\n    translateY -= translateYoffset;\n  }\n\n  return /*#__PURE__*/React.createElement(Spring, {\n    to: {\n      transform: \"translateX(0%) translateY(\".concat(translateY, \"%) scale(\").concat(distanceFactor, \")\"),\n      top: \"\".concat(offsetRadius === 0 ? 50 : 50 + offsetFromMiddle * 50 / offsetRadius, \"%\"),\n      opacity: distanceFactor * distanceFactor\n    },\n    config: animationConfig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, function (style) {\n    return /*#__PURE__*/React.createElement(SlideContainer, {\n      style: _objectSpread({}, style, {\n        zIndex: Math.abs(Math.abs(offsetFromMiddle) - 2)\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SlideCard, {\n      onClick: function onClick() {\n        return moveSlide(offsetFromMiddle);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, content));\n  });\n}\n\nexport default withGesture()(Slide);","map":{"version":3,"sources":["C:/Users/lenovo/Downloads/react-spring-3d-carousel-basic-example/src/Slide.js"],"names":["React","styled","Spring","animated","withGesture","SlideContainer","div","SlideCard","Slide","content","offsetRadius","index","animationConfig","moveSlide","delta","down","up","offsetFromMiddle","totalPresentables","distanceFactor","Math","abs","offsetCardClick","i","console","log","translateYoffset","translateY","transform","top","opacity","style","zIndex"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,0BAAjC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,IAAMC,cAAc,GAAGJ,MAAM,CAACK,GAAV,+NAApB;AAUA,IAAMC,SAAS,GAAGN,MAAM,CAACK,GAAV,sTAAf;;AAcA,SAASE,KAAT,OASG;AAAA;;AAAA,MARDC,OAQC,QARDA,OAQC;AAAA,MAPDC,YAOC,QAPDA,YAOC;AAAA,MANDC,KAMC,QANDA,KAMC;AAAA,MALDC,eAKC,QALDA,eAKC;AAAA,MAJDC,SAIC,QAJDA,SAIC;AAAA,MAHDC,KAGC,QAHDA,KAGC;AAAA,MAFDC,IAEC,QAFDA,IAEC;AAAA,MADDC,EACC,QADDA,EACC;AACD,MAAMC,gBAAgB,GAAGN,KAAK,GAAGD,YAAjC;AACA,MAAMQ,iBAAiB,GAAG,IAAIR,YAAJ,GAAmB,CAA7C;AACA,MAAMS,cAAc,GAAG,IAAIC,IAAI,CAACC,GAAL,CAASJ,gBAAgB,IAAIP,YAAY,GAAG,CAAnB,CAAzB,CAA3B;;AAEA,MAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,CAAC,EAAI;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,GAFD;;AAIA,MAAMG,gBAAgB,GACpB,MAAMN,IAAI,CAACC,GAAL,CAASJ,gBAAT,KAA8BP,YAAY,GAAG,CAA7C,CAAN,CADF;AAEA,MAAIiB,UAAU,GAAG,CAAC,EAAlB;;AAEA,MAAIjB,YAAY,KAAK,CAArB,EAAwB;AACtB,QAAIC,KAAK,KAAK,CAAd,EAAiB;AACfgB,MAAAA,UAAU,GAAG,CAAb;AACD,KAFD,MAEO,IAAIhB,KAAK,KAAKO,iBAAiB,GAAG,CAAlC,EAAqC;AAC1CS,MAAAA,UAAU,GAAG,CAAC,GAAd;AACD;AACF;;AAED,MAAIV,gBAAgB,KAAK,CAArB,IAA0BF,IAA9B,EAAoC;AAClCY,IAAAA,UAAU,IAAIb,KAAK,CAAC,CAAD,CAAL,IAAYJ,YAAY,GAAG,CAA3B,CAAd;;AACA,QAAIiB,UAAU,GAAG,CAAC,EAAlB,EAAsB;AACpBd,MAAAA,SAAS,CAAC,CAAC,CAAF,CAAT;AACD;;AACD,QAAIc,UAAU,GAAG,CAAC,GAAlB,EAAuB;AACrBd,MAAAA,SAAS,CAAC,CAAD,CAAT;AACD;AACF;;AACD,MAAII,gBAAgB,GAAG,CAAvB,EAA0B;AACxBU,IAAAA,UAAU,IAAID,gBAAd;AACD,GAFD,MAEO,IAAIT,gBAAgB,GAAG,CAAvB,EAA0B;AAC/BU,IAAAA,UAAU,IAAID,gBAAd;AACD;;AAED,sBACE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAE;AACFE,MAAAA,SAAS,sCAA+BD,UAA/B,sBAAqDR,cAArD,MADP;AAEFU,MAAAA,GAAG,YACDnB,YAAY,KAAK,CAAjB,GAAqB,EAArB,GAA0B,KAAMO,gBAAgB,GAAG,EAApB,GAA0BP,YADxD,MAFD;AAKFoB,MAAAA,OAAO,EAAEX,cAAc,GAAGA;AALxB,KADN;AAQE,IAAA,MAAM,EAAEP,eARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUG,UAAAmB,KAAK;AAAA,wBACJ,oBAAC,cAAD;AACE,MAAA,KAAK,oBACAA,KADA;AAEHC,QAAAA,MAAM,EAAEZ,IAAI,CAACC,GAAL,CAASD,IAAI,CAACC,GAAL,CAASJ,gBAAT,IAA6B,CAAtC;AAFL,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE;AAAA,eAAMJ,SAAS,CAACI,gBAAD,CAAf;AAAA,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,OADH,CANF,CADI;AAAA,GAVR,CADF;AAyBD;;AAED,eAAeL,WAAW,GAAGI,KAAH,CAA1B","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Spring, animated } from \"react-spring/renderprops\";\nimport { withGesture } from \"react-with-gesture\";\n\nconst SlideContainer = styled.div`\n  position: absolute;\n  height: 70%;\n  top: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform-origin: 50% 50%;\n`;\n\nconst SlideCard = styled.div`\n  position: relative;\n  max-width: 50%;\n  min-width: 30%;\n  width: 100vw;\n  height: 100%;\n  background: white;\n  font-size: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform-origin: 50% 50%;\n`;\n\nfunction Slide({\n  content,\n  offsetRadius,\n  index,\n  animationConfig,\n  moveSlide,\n  delta,\n  down,\n  up\n}) {\n  const offsetFromMiddle = index - offsetRadius;\n  const totalPresentables = 2 * offsetRadius + 1;\n  const distanceFactor = 1 - Math.abs(offsetFromMiddle / (offsetRadius + 1));\n\n  const offsetCardClick = i => {\n    console.log(i);\n  };\n\n  const translateYoffset =\n    50 * (Math.abs(offsetFromMiddle) / (offsetRadius + 1));\n  let translateY = -50;\n\n  if (offsetRadius !== 0) {\n    if (index === 0) {\n      translateY = 0;\n    } else if (index === totalPresentables - 1) {\n      translateY = -100;\n    }\n  }\n\n  if (offsetFromMiddle === 0 && down) {\n    translateY += delta[1] / (offsetRadius + 1);\n    if (translateY > -40) {\n      moveSlide(-1);\n    }\n    if (translateY < -100) {\n      moveSlide(1);\n    }\n  }\n  if (offsetFromMiddle > 0) {\n    translateY += translateYoffset;\n  } else if (offsetFromMiddle < 0) {\n    translateY -= translateYoffset;\n  }\n\n  return (\n    <Spring\n      to={{\n        transform: `translateX(0%) translateY(${translateY}%) scale(${distanceFactor})`,\n        top: `${\n          offsetRadius === 0 ? 50 : 50 + (offsetFromMiddle * 50) / offsetRadius\n        }%`,\n        opacity: distanceFactor * distanceFactor\n      }}\n      config={animationConfig}\n    >\n      {style => (\n        <SlideContainer\n          style={{\n            ...style,\n            zIndex: Math.abs(Math.abs(offsetFromMiddle) - 2)\n          }}\n        >\n          <SlideCard onClick={() => moveSlide(offsetFromMiddle)}>\n            {content}\n          </SlideCard>\n        </SlideContainer>\n      )}\n    </Spring>\n  );\n}\n\nexport default withGesture()(Slide);\n"]},"metadata":{},"sourceType":"module"}